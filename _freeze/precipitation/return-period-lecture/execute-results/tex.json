{
  "hash": "85b1e95a1ce0791344352f9c3231b500",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Return Period\nexecute:\n  freeze: auto\n---\n\n## Bilbao, Spain\n\n![](/archive/figures/bilbao-map.png)\n\n## Today\n\n![](640px-Guggenheim_museum_Bilbao_HDR-image.jpg)\n\n## August 1983\n\n![](/archive/figures/bilbao-flood-cars.jpg)\n\nOn Friday, August 26, 1983, Bilbao was celebrating its Aste Nagusia or Great Week, the main annual festivity in the city, when it and other municipalities of the Basque Country, Burgos, and Cantabria suffered devastating flooding due to heavy rains. In 24 hours, the volume of water registered 600 liters per square meter. Across all the affected areas, the weather service recorded 1.5 billion tons of water. In areas of Bilbao, the water reached a height of 5 meters (15 feet). Transportation, electricity and gas services, drinking water, food, telephone, and many other basic services were severely affected. 32 people died in Biscay, 4 people died in Cantabria, 2 people died in Alava, and 2 people died Burgos. 5 more people went missing.\n\n## How often will such rainfall happen?\n\nHow often does it rain 50 mm in 1 day? What about 100 mm in 1 day? How big is a \"once-in-a-century event\"?\n\nLet's examine Bilbao's daily rainfall (mm), between 1947 to 2021\n\n![](/archive/figures/bilbao-1947-2021.png)\n\nOn the week of 22-28 August 1983, Bilbao's weather station measured 45 cm of rainfall!\n\n![](/archive/figures/bilbao-august-1983.png)\n\nLet's analyze this data and find out how rare such events are. First we need to find the annual maximum for each hydrological year.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"Show/hide the code\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('BILBAO_daily.csv', sep=\",\")\ndf['DATE'] = pd.to_datetime(df['DATE'])\ndf = df.set_index('DATE')\n# IMPORTANT!! daily precipitation data is in tenths of mm, divide by 10 to get it in mm.\ndf['PRCP'] = df['PRCP'] / 10\n\nimport altair as alt\nalt.data_transformers.disable_max_rows()\n\n# Altair only recognizes column data; it ignores index values.\n# You can plot the index data by first resetting the index\n# I know that I've just made 'DATE' the index, but I want to have this here nonetheless so I can refer to this in the future\ndf_new = df.reset_index()#.replace({0.0:np.nan})\nsource = df_new[['DATE', 'PRCP']]\n\nbrush = alt.selection(type='interval', encodings=['x'])\n\nbase = alt.Chart(source).mark_line().encode(\n    x = 'DATE:T',\n    y = 'PRCP:Q'\n).properties(\n    width=600,\n    height=200\n)\n\nupper = base.encode(\n    alt.X('DATE:T', scale=alt.Scale(domain=brush)),\n    alt.Y('PRCP:Q', scale=alt.Scale(domain=(0,100)))\n)\n\nlower = base.properties(\n    height=60\n).add_selection(brush)\n\nalt.vconcat(upper, lower)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/home/yairmau/miniforge3/lib/python3.10/site-packages/altair/utils/deprecation.py:65: AltairDeprecationWarning:\n\n'selection' is deprecated.\n   Use 'selection_point()' or 'selection_interval()' instead; these functions also include more helpful docstrings.\n\n/home/yairmau/miniforge3/lib/python3.10/site-packages/altair/utils/deprecation.py:65: AltairDeprecationWarning:\n\n'add_selection' is deprecated. Use 'add_params' instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nalt.VConcatChart(...)\n```\n:::\n:::\n\n\nWe will consider a hydrological year starting on 1 August.\n![](/archive/figures/monthly_average_bilbao.png)\n\n* Top: Histogram of annual daily precipitation maximum events.  \n* Bottom: The cumulative answers the question: \"How many events can be found **below** a given threshold?\"\n\n![](/archive/figures/hist_count_cumulative_bilbao.png)\n\n* Top: We can normalize the histogram such that the total area is 1. Now the histogram is called `probability density function (pdf)`. The probability is NOT the pdf, but the area between two thresholds.\n* Bottom: The cumulative now becomes a probability between 0 and 1. It is now called `cumulative density function (cdf)`. The cdf answers the question: \"What is the probability to choose an event **below** a given threshold?\"\n\n![](/archive/figures/pdf_cdf_bilbao.png)\n\nWe are interested in extreme events, and we want to estimate how many years, **on average**, do we have to wait to get an annual maximum **above** a given threshold?\n\nThis question is very similar to what we asked regarding the cdf. ðŸ¤”  \nWe switched the word \"below\" for \"above\". The complementary of the cumulative is called the exceedance (or survival) probability:\n\n$$\n\\text{exceedance, survival} = 1 - \\text{cdf}\n$$\n\n\n![](/archive/figures/return_prob_050.png)\n\n![](/archive/figures/return_prob_033.png)\n\n![](/archive/figures/return_prob_020.png)\n\n![](/archive/figures/return_prob_010.png)\n\n![](/archive/figures/return_prob_005.png)\n\n<!-- Now everything together in one gif:\n\n![](/archive/figures/return_prob.gif) -->\n\n## Return Period\n\nWe will follow @brutsaert2005hydrology, page 513. He defines quantities a little different from what we did above.\n\n$F(x)$ is the CDF of the PDF $f(x)$. $F(x)$ indicates the non-exceedance probability, i.e., the probability that a certain event above $x$ has **not** occurred (or that an event below $x$ has occurred, same thing). Modifying the graph shown above, we have\n\n![](/archive/figures/return_prob_050_reversed.png)\n\n\n$1-F(x)$ is the probability that a certain event above $x$ *has* occurred. It's reciprocal is the return period:\n\n$$\nT_r(x) = \\frac{1}{1-F(x)}\n$$\n\nThis return period is the expected number of observations required until $x$ is exceeded once.\nIn our case, we can ask the question: how many years will pass (on average) until we see a rainfall event greater that that of 26 August 1983?\n\nLet's call $p=F(x)$ the probability that we measured once and that an event greater than $x$ has *not* occurred.\nWhat is the probability that a rainfall above $x$ will occur only on year number $k$?  \n\n* it hasn't occurred on year 1 (probability p)\n* it hasn't occurred on year 2 (probability p)\n* it hasn't occurred on year 3 (probability p)\n* ...\n* it has occurred on year k (probability 1-p)\n\n$P\\{k \\text{ trials until }X>x\\} = p^{k-1}(1-p)$\n\nEvery time the number $k$ will be different. What will be $k$ *on average*?\n\n$$\n\\bar{k} = \\displaystyle\\sum_{k=1}^{\\infty} k P(k) = \\displaystyle\\sum_{k=1}^{\\infty} k p^{k-1}(1-p)\n$$\n\nLet's open that up:\n\n$$\n\\begin{split}\n\\bar{k} &= 1-p + 2p(1-p) + 3p^2(1-p) + 4p^3(1-p)+ \\cdots\\\\\n\\bar{k} &= 1-p + 2p - 2p^2 + 3p^2 - 3p^4 + 4p^3 - 4p^4+ \\cdots \\\\\n\\bar{k} &= 1 + p + p^2 + p^3 + p^4 + \\cdots\n\\end{split}\n$$\n\nFor $p<1$, the series converges to\n$$\n1 + p + p^2 + p^3 + p^4 + \\cdots = \\frac{1}{1-p},\n$$\ntherefore\n$$\n\\bar{k} = \\frac{1}{1-p}.\n$$\n\nWe conclude that if we know the exceedance probability, we immediately can say what the return times are. We now need a way of estimating this exceedance probability.\n\n## Generalized extreme value distribution\n\nThis part of the lecture was heavily inspired by Alexandre Martinez's excellent [blog post](https://sites.uci.edu/alexm/teaching-interests/calculating-return-level-of-extreme-precipitation-and-temperature-using-extrem-events-analysis/).\n\nThe Generalized Extreme Value (GEV) distribution is the limit distribution of properly normalized maxima of a sequence of independent and identically distributed random variables ([from Wikipedia](https://en.wikipedia.org/wiki/Generalized_extreme_value_distribution)).\n\nIt has three parameters: shape, location and scale. We can fit Bilbao's annual daily maxima with a GEV distribution, yielding:\n\n![(shape=-0.18, location=52, shape=16)\n](/archive/figures/bilbao-gev_hist2.png)\n\nWe will use the fitted parameters to plot the cdf, and then we will find the return periods. How can we calculate the cdf numerically form the data?\n\n### cdf from data\n\nHere is a plot of annual daily precipitation maxima for Bilbao.\n\n![](/archive/figures/bilbao-max-daily.png)\n\nThere are 74 points here. Let's order them from small to large:\n\n![](/archive/figures/bilbao-max-daily-vs-order.png)\n\n![](/archive/figures/bilbao-max-daily-vs-order-threshold.png)\n\nNow, instead of having the order of the event on the horizontal axis, let's make it a fraction from 0 to 1.\n\n![](/archive/figures/bilbao-max-daily-vs-fraction-arrow.png)\n\nWe are getting there! We can interpret this fraction as the probability of randomly choosing a point in the graph below the threshold.\n\n![](/archive/figures/bilbao-max-daily-vs-probability-arrow.png)\n\nNow we just need to flip the vertical and horizontal axes, and we're done! We have our cdf!\n\n![](/archive/figures/bilbao-probability-vs-max-daily.png)\n\nNow that we have the cdf from data, we can plot on top of it the GEV cdf with the parameters we found before.\n\n![](/archive/figures/bilbao-probability-vs-max-daily-gev-pdf-fit.png)\n\nThe highest data point in this graph goes only to 252 mm, corresponding to the highest event recorded in 74 years. We can use the GEV cdf to calculate return times for any desired levels, simply by converting the vertical axis (cdf) to return period, using the equation we found earlier.\n$$\nT_r(x) = \\frac{1}{1-F(x)},\n$$\n\nwhere $T_r$ is the return period (in years), and $F$ is the cdf.\n\n![](/archive/figures/bilbao-annual-daily-max-vs-return-time-fit.png)\n\nThe information contained in the last two graphs is exactly the same, but somehow this last graph looks much worse! Why is this so? Acording to the GEV distribution we got, the return time for a 252 mm event is about 700 years!\n\n## Extra: K-S test\n\nto be completed...\n\n## Extra: confidence interval\n\nto be completed...\n\n<!-- ## Plotting Position\n\nSource: @brutsaert2005hydrology, pages 514-516  \n\nThe **Plotting Position** is used as an estimate of the exceedance probability. Many formulas have been suggested (see source above), we will use the **Weibull plotting position**:\n\n$P_m=$ plotting position, or probability of occurence for each event  \n$n=$ total number of events  \n$m=$ rank of each event, where $m=1$ is the lowest value, and $m=n$ is the highest\n\n\n### Return period\n$$\n\\text{Return period} = T_r = \\frac{1}{1-P_m}\n$$\n\n#### Weibull plotting position:\n\n$$\nP_m = \\frac{m}{n+1}\n$$\n\nNow let's calculate that for Bilbao:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"Show/hide the code\"}\n# resample daily data into yearly data (maximum yearly value)\nmax_annual = df['PRCP'].resample('A-JUL').max().to_frame()\n# sort yearly max from lowest to highest\nmax_annual = max_annual.sort_values(by=['PRCP'], ascending=True)\nmax_annual['m'] = np.arange(1, len(max_annual) + 1)\nn = len(max_annual['m'])\nmax_annual['Pm'] = max_annual['m'] / (n+1)\nmax_annual['Tr'] = 1 / (1 - max_annual['Pm'])\nmax_annual\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_9765/32083481.py:2: FutureWarning:\n\n'A-JUL' is deprecated and will be removed in a future version, please use 'YE-JUL' instead.\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PRCP</th>\n      <th>m</th>\n      <th>Pm</th>\n      <th>Tr</th>\n    </tr>\n    <tr>\n      <th>DATE</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2011-07-31</th>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0.013158</td>\n      <td>1.013333</td>\n    </tr>\n    <tr>\n      <th>2002-07-31</th>\n      <td>28.5</td>\n      <td>2</td>\n      <td>0.026316</td>\n      <td>1.027027</td>\n    </tr>\n    <tr>\n      <th>2021-07-31</th>\n      <td>35.8</td>\n      <td>3</td>\n      <td>0.039474</td>\n      <td>1.041096</td>\n    </tr>\n    <tr>\n      <th>2001-07-31</th>\n      <td>38.6</td>\n      <td>4</td>\n      <td>0.052632</td>\n      <td>1.055556</td>\n    </tr>\n    <tr>\n      <th>2004-07-31</th>\n      <td>41.1</td>\n      <td>5</td>\n      <td>0.065789</td>\n      <td>1.070423</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2010-07-31</th>\n      <td>108.1</td>\n      <td>71</td>\n      <td>0.934211</td>\n      <td>15.200000</td>\n    </tr>\n    <tr>\n      <th>1960-07-31</th>\n      <td>137.2</td>\n      <td>72</td>\n      <td>0.947368</td>\n      <td>19.000000</td>\n    </tr>\n    <tr>\n      <th>1964-07-31</th>\n      <td>143.5</td>\n      <td>73</td>\n      <td>0.960526</td>\n      <td>25.333333</td>\n    </tr>\n    <tr>\n      <th>1954-07-31</th>\n      <td>172.6</td>\n      <td>74</td>\n      <td>0.973684</td>\n      <td>38.000000</td>\n    </tr>\n    <tr>\n      <th>1984-07-31</th>\n      <td>252.6</td>\n      <td>75</td>\n      <td>0.986842</td>\n      <td>76.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>75 rows Ã— 4 columns</p>\n</div>\n```\n:::\n:::\n\n\nHow well does $P_m$ approximate $F(x)$?\n\n![](/archive/figures/weibull_plotting_position.png)\n\nWe can now see in this graph how long it takes, **on average**, for an annual maximum event above any threshold.\n\n![](/archive/figures/annual_max_vs_return_period.png)\n\nFor times longer than $n$, we need to extrapolate from the curve above.\n\n![](/archive/figures/extrapolation_exceedance1.png)\n\n![](/archive/figures/extrapolation_exceedance2.png)\n\n![](/archive/figures/extrapolation_exceedance3.png)\n\n![](/archive/figures/extrapolation_exceedance4.png) -->\n\n",
    "supporting": [
      "return-period-lecture_files/figure-pdf"
    ],
    "filters": []
  }
}